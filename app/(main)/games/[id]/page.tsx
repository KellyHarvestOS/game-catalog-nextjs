// app/(main)/games/[id]/page.tsx
'use client';
import { useEffect, useState, useCallback } from 'react';
import { useParams, useRouter } from 'next/navigation';
import { Game as GameTypeFromShared, UserRole, ScreenshotType as LocalScreenshotType } from '@/types';
import { useSession } from 'next-auth/react';
import Button from '@/components/ui/Button';
import Link from 'next/link';
import Image from 'next/image';

interface GamePageStateType extends GameTypeFromShared {
  isOwned?: boolean;
  screenshots?: LocalScreenshotType[];
}

const ScreenshotGallery = ({ urls }: { urls: LocalScreenshotType[] | undefined }) => {
  if (!urls || urls.length === 0) return null;
  return (
    <section className="mt-8 sm:mt-10">
      <h3 className="text-xl sm:text-2xl font-semibold text-indigo-300 mb-4">–°–∫—Ä–∏–Ω—à–æ—Ç—ã</h3>
      <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-3 sm:gap-4">
        {urls.map((screenshot, index) => (
          <a
            key={screenshot.id || `ss-${index}`}
            href={screenshot.url}
            target="_blank"
            rel="noopener noreferrer"
            className="block aspect-video relative rounded-lg overflow-hidden shadow-lg group focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:ring-offset-slate-800"
          >
            <Image
              src={screenshot.url}
              alt={`–°–∫—Ä–∏–Ω—à–æ—Ç ${index + 1}`}
              fill
              sizes="(max-width: 640px) 50vw, (max-width: 1024px) 33vw, 25vw"
              className="object-cover group-hover:scale-105 transition-transform duration-300"
              onError={(e) => { (e.target as HTMLImageElement).src = '/placeholder-image-error.jpg';}}
            />
          </a>
        ))}
      </div>
    </section>
  );
};

const DetailItem: React.FC<{ label: string, value?: string | number | null, IconComponent?: React.ElementType }> = ({ label, value, IconComponent }) => (
    <div className="flex items-start py-3 border-b border-slate-700 last:border-b-0">
        {IconComponent && <IconComponent className="h-5 w-5 text-indigo-400 mr-3 mt-0.5 flex-shrink-0" />}
        <span className="font-medium text-slate-300 w-1/3 md:w-1/4 capitalize">{label}:</span>
        <span className="text-slate-400 w-2/3 md:w-3/4">{value || 'N/A'}</span>
    </div>
);


export default function GameDetailPage() {
  const params = useParams();
  const router = useRouter();
  const id = params.id as string;

  const { data: session, status: sessionStatus } = useSession();
  const isLoadingSession = sessionStatus === 'loading';
  const userRole = session?.user?.role as UserRole | undefined;

  const [game, setGame] = useState<GamePageStateType | null>(null);
  const [isLoadingGame, setIsLoadingGame] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [purchaseMessage, setPurchaseMessage] = useState<string | null>(null);
  const [isProcessingPurchase, setIsProcessingPurchase] = useState(false);

  const loadGameData = useCallback(async () => {
    if (!id) {
      setError("ID –∏–≥—Ä—ã –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω.");
      setIsLoadingGame(false);
      return;
    }
    setIsLoadingGame(true);
    setError(null);
    setPurchaseMessage(null);
    try {
      const response = await fetch(`/api/games/${id}`);
      if (!response.ok) {
        let errorMessage = `–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${response.status}`;
        try {
          const errorData = await response.json();
          if (errorData && errorData.message) errorMessage = errorData.message;
        } catch (e) { /* ignore */ }
        throw new Error(errorMessage);
      }
      const data: GamePageStateType = await response.json();
      console.log("–î–ê–ù–ù–´–ï –ò–ì–†–´ –ù–ê –°–¢–†–ê–ù–ò–¶–ï –î–ï–¢–ê–õ–ï–ô (page.tsx):", data);
      setGame(data);
    } catch (err) {
      setError((err as Error).message);
    } finally {
      setIsLoadingGame(false);
    }
  }, [id]);

  useEffect(() => {
    if (id) { // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ id –¥–æ—Å—Ç—É–ø–µ–Ω
        loadGameData();
    }
  // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [id, sessionStatus, loadGameData]); // –î–æ–±–∞–≤–∏–ª loadGameData –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

  const handleRetryFetch = () => {
    loadGameData();
  };

  const handlePurchaseGame = async () => {
    if (!game || !session?.user) {
      setPurchaseMessage('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –ø–æ–∫—É–ø–∫–∏.');
      return;
    }
    if (game.isOwned) {
      setPurchaseMessage('–≠—Ç–∞ –∏–≥—Ä–∞ —É–∂–µ –≤ –≤–∞—à–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ.');
      return;
    }
    setIsProcessingPurchase(true);
    setPurchaseMessage(null); setError(null);
    if (game.price && game.price > 0) {
      const confirmPayment = confirm(
        `–ò–≥—Ä–∞ "${game.title}" —Å—Ç–æ–∏—Ç ${game.price.toLocaleString('ru-RU', { style: 'currency', currency: 'RUB' })}. –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–∏–º—É–ª—è—Ü–∏—é –æ–ø–ª–∞—Ç—ã?`
      );
      if (!confirmPayment) {
        setPurchaseMessage('–û–ø–ª–∞—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.');
        setIsProcessingPurchase(false);
        return;
      }
      await new Promise(resolve => setTimeout(resolve, 1000));
    }
    try {
      const response = await fetch(`/api/games/${game.id}/purchase`, { method: 'POST' });
      const data = await response.json();
      if (!response.ok) throw new Error(data.message || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–≤–µ—Ä—à–∏—Ç—å –ø–æ–∫—É–ø–∫—É.');
      setPurchaseMessage(data.message);
      setGame(prevGame => prevGame ? { ...prevGame, isOwned: true } : null);
    } catch (err) {
      setError((err as Error).message);
    } finally {
      setIsProcessingPurchase(false);
    }
  };

  const handleDeleteGame = async () => {
    if (!game || userRole !== 'ADMIN' || game.isStatic) return;
    if (confirm(`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–≥—Ä—É "${game.title}"? –≠—Ç—É –æ–ø–µ—Ä–∞—Ü–∏—é –Ω–µ–ª—å–∑—è –±—É–¥–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å.`)) {
      try {
        const response = await fetch(`/api/games/${game.id}`, { method: 'DELETE' });
        if (!response.ok) {
             const errorData = await response.json().catch(() => ({ message: '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∏–≥—Ä—É.' }));
             throw new Error(errorData.message || '–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∏–≥—Ä—ã');
        }
        alert('–ò–≥—Ä–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!');
        router.push('/games');
        router.refresh();
      } catch (err: any) { alert(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: ${err.message}`); }
    }
  };

  const isLoading = isLoadingGame || isLoadingSession;

  if (isLoading) {
    return (
      <div className="flex justify-center items-center min-h-[calc(100vh-200px)] bg-slate-900">
        <div className="text-center p-10 text-slate-300 text-xl">–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ–± –∏–≥—Ä–µ...</div>
      </div>
    );
  }

  if (error && !purchaseMessage) {
    return (
      <div className="flex justify-center items-center min-h-[calc(100vh-200px)] bg-slate-900">
        <div className="text-center p-10">
            <div className="text-5xl mb-4 animate-pulse">üòî</div>
            <h2 className="text-2xl font-semibold text-red-400 mb-2">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</h2>
            <p className="text-slate-400 mb-6 max-w-md">{error}</p>
            <Button onClick={handleRetryFetch} variant="secondary">–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞</Button>
        </div>
      </div>
    );
  }

  if (!game) {
     return (
      <div className="flex justify-center items-center min-h-[calc(100vh-200px)] bg-slate-900">
        <div className="text-center p-10 text-slate-300 text-xl">–ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.</div>
      </div>
    );
  }

  const imageDisplaySrc = game.coverImageUrl || (game as any).imageUrl || '/placeholder-game-detail.jpg';
  const errorDisplaySrc = '/placeholder-image-error.jpg';

  return (
    <div className="bg-slate-900 text-slate-100 min-h-screen">
      <div className="container mx-auto px-4 py-8 md:py-12">
        <div className="mb-6 sm:mb-8">
            <Link href="/games" className="inline-flex items-center text-indigo-400 hover:text-indigo-300 transition-colors group">
                <span className="text-xl mr-2 transition-transform group-hover:-translate-x-1">‚Äπ</span>
                <span className="text-sm font-medium">–ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–∞–ª–æ–≥—É</span>
            </Link>
        </div>

        <article className="bg-slate-800 shadow-2xl rounded-xl overflow-hidden">
          <div className="md:flex">
            <div className="md:w-2/5 lg:w-1/3 relative w-full aspect-[3/4] sm:aspect-[16/9] md:aspect-auto md:min-h-[500px] lg:min-h-0 bg-slate-700 md:rounded-l-xl md:rounded-tr-none">
              {imageDisplaySrc && imageDisplaySrc !== '/placeholder-game-detail.jpg' ? (
                <Image
                  src={imageDisplaySrc}
                  alt={`–û–±–ª–æ–∂–∫–∞ –∏–≥—Ä—ã ${game.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}`}
                  fill
                  sizes="(max-width: 767px) 100vw, (max-width: 1023px) 40vw, 33vw"
                  className="object-cover md:rounded-l-xl md:rounded-tr-none"
                  priority
                  onError={(e) => {
                    (e.target as HTMLImageElement).srcset = errorDisplaySrc;
                    (e.target as HTMLImageElement).src = errorDisplaySrc;
                  }}
                />
              ) : (
                <div className="w-full h-full flex items-center justify-center">
                  <span className="text-slate-500 text-lg">–ù–µ—Ç –æ–±–ª–æ–∂–∫–∏</span>
                </div>
              )}
            </div>

            <div className="md:w-3/5 lg:w-2/3 p-6 sm:p-8 lg:p-10 flex flex-col">
              <h1 className="text-3xl sm:text-4xl lg:text-5xl font-extrabold text-slate-100 mb-2 leading-tight">
                {game.title || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'}
              </h1>
              <p className="text-2xl sm:text-3xl font-bold text-green-400 mb-6 sm:mb-8">
                {typeof game.price === 'number' ? (game.price === 0 ? '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ' : `$${game.price.toFixed(2)}`) : '–¶–µ–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞'}
              </p>

              {purchaseMessage && <p className={`mb-4 p-3 rounded-md text-center text-sm ${purchaseMessage.toLowerCase().includes('—É—Å–ø–µ—à–Ω–æ') || purchaseMessage.toLowerCase().includes('–¥–æ–±–∞–≤–ª–µ–Ω–∞') ? 'bg-green-900/50 text-green-300' : 'bg-yellow-900/50 text-yellow-300'}`}>{purchaseMessage}</p>}
              {error && !purchaseMessage && <p className="mb-4 p-3 rounded-md text-center text-sm bg-red-900/50 text-red-300">{error}</p>}

              <div className="space-y-3 mb-6 sm:mb-8">
                  {session?.user && (
                    game.isOwned ? (
                      <Button variant="secondary" size="lg" className="w-full sm:w-auto py-3 text-base" disabled>
                        –í –≤–∞—à–µ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ
                      </Button>
                    ) : (
                      <Button
                        onClick={handlePurchaseGame}
                        variant="success"
                        size="lg"
                        className="w-full sm:w-auto py-3 text-base"
                        isLoading={isProcessingPurchase}
                        disabled={isProcessingPurchase || isLoadingGame}
                      >
                        {isProcessingPurchase ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : (game.price === 0 ? '–ü–æ–ª—É—á–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ' : '–ö—É–ø–∏—Ç—å –∏–≥—Ä—É')}
                      </Button>
                    )
                  )}
                  {!session?.user && (
                    <p className="text-slate-300 text-center sm:text-left">
                      <Link href="/login" className="text-indigo-400 hover:underline font-semibold">–í–æ–π–¥–∏—Ç–µ</Link> –∏–ª–∏ <Link href="/register" className="text-indigo-400 hover:underline font-semibold">–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å</Link>, —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å.
                    </p>
                  )}
              </div>

              <section className="mb-6 sm:mb-8">
                <h2 className="sr-only">–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h2>
                <div className="border border-slate-700 rounded-lg overflow-hidden">
                    <DetailItem label="–ñ–∞–Ω—Ä" value={game.genre} />
                    <DetailItem label="–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã" value={game.platform} />
                    <DetailItem label="–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫" value={game.developer} />
                    <DetailItem label="–ò–∑–¥–∞—Ç–µ–ª—å" value={game.publisher} />
                    <DetailItem
                        label="–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞"
                        value={game.releaseDate ? new Date(game.releaseDate).toLocaleDateString('ru-RU', { year: 'numeric', month: 'long', day: 'numeric' }) : undefined}
                    />
                </div>
              </section>

              {game.description && (
                <section className="mb-6 sm:mb-8">
                  <h2 className="text-xl font-semibold text-indigo-300 mb-3">–û–ø–∏—Å–∞–Ω–∏–µ:</h2>
                  <div className="prose prose-sm sm:prose-base prose-invert max-w-none text-slate-300 leading-relaxed">
                    <p>{game.description}</p>
                  </div>
                </section>
              )}

              {game.screenshots && game.screenshots.length > 0 && (
                <ScreenshotGallery urls={game.screenshots} />
              )}

              {userRole === 'ADMIN' && !game.isStatic && (
                <div className="mt-auto pt-6 border-t border-slate-700 flex flex-col sm:flex-row gap-3">
                  <Link href={`/games/${game.id}/edit`} className="w-full sm:w-auto">
                    <Button variant="warning" className="w-full">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</Button>
                  </Link>
                  <Button variant="danger" onClick={handleDeleteGame} className="w-full sm:w-auto">
                    –£–¥–∞–ª–∏—Ç—å –∏–≥—Ä—É
                  </Button>
                </div>
              )}
            </div> {/* –ó–∞–∫—Ä—ã–≤–∞—é—â–∏–π div –¥–ª—è md:w-3/5 lg:w-2/3 */}
          </div> {/* –ó–∞–∫—Ä—ã–≤–∞—é—â–∏–π div –¥–ª—è md:flex */}
        </article> {/* –ó–∞–∫—Ä—ã–≤–∞—é—â–∏–π —Ç–µ–≥ article */}
      </div> {/* –ó–∞–∫—Ä—ã–≤–∞—é—â–∏–π div –¥–ª—è container */}
    </div> // –ó–∞–∫—Ä—ã–≤–∞—é—â–∏–π div –¥–ª—è bg-slate-900
  );
}