// app/(main)/games/page.tsx
'use client';
import { useEffect } from 'react';
import GameCard from '@/components/GameCard'; // –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ GameCard —Å—Ç–∏–ª–∏–∑–æ–≤–∞–Ω —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
import { useGames } from '@/contexts/GameContext';
import Link from 'next/link';
import Button from '@/components/ui/Button';
// import { PlusCircleIcon, ExclamationTriangleIcon } from '@heroicons/react/24/outline'; // –ü—Ä–∏–º–µ—Ä –∏–∫–æ–Ω–æ–∫

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ (–º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª)
const LoadingSkeletonCard = () => (
  <div className="bg-slate-800 rounded-lg shadow-xl overflow-hidden animate-pulse">
    <div className="w-full h-56 md:h-64 bg-slate-700"></div>
    <div className="p-5">
      <div className="h-6 bg-slate-700 rounded w-3/4 mb-3"></div>
      <div className="h-4 bg-slate-700 rounded w-1/2 mb-2"></div>
      <div className="h-4 bg-slate-700 rounded w-1/3 mb-4"></div>
      <div className="h-10 bg-slate-700 rounded w-full"></div>
    </div>
  </div>
);

export default function GamesListPage() {
  const { state, fetchGames } = useGames();
  const { games, isLoading, error } = state;

  useEffect(() => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–≥—Ä—ã –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞, –µ—Å–ª–∏ –∏—Ö –µ—â–µ –Ω–µ—Ç
    // –∏–ª–∏ –µ—Å–ª–∏ –º—ã —Ö–æ—Ç–∏–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å (–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É)
    if (games.length === 0 && !isLoading && !error) {
        fetchGames();
    }
    // –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ, —á—Ç–æ–±—ã –¥–∞–Ω–Ω—ã–µ –≤—Å–µ–≥–¥–∞ –æ–±–Ω–æ–≤–ª—è–ª–∏—Å—å –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É:
    // fetchGames();
  }, [fetchGames, games.length, isLoading, error]); // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

  // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∫–µ–ª–µ—Ç–æ–Ω–æ–≤ –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏, –µ—Å–ª–∏ –∏–≥—Ä—ã –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
  if (isLoading && games.length === 0) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="flex flex-col sm:flex-row justify-between items-center mb-8 gap-4">
          <h1 className="text-3xl sm:text-4xl font-bold text-indigo-400">–ö–∞—Ç–∞–ª–æ–≥ –ò–≥—Ä</h1>
          <div className="h-10 bg-slate-700 rounded w-48 animate-pulse"></div> {/* Placeholder –¥–ª—è –∫–Ω–æ–ø–∫–∏ */}
        </div>
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {Array.from({ length: 8 }).map((_, index) => ( // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º 8 —Å–∫–µ–ª–µ—Ç–æ–Ω–æ–≤
            <LoadingSkeletonCard key={index} />
          ))}
        </div>
      </div>
    );
  }

  // –£–ª—É—á—à–µ–Ω–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—à–∏–±–∫–∏
  if (error) {
    return (
      <div className="container mx-auto px-4 py-8 text-center flex flex-col items-center justify-center min-h-[calc(100vh-200px)]">
        {/* <ExclamationTriangleIcon className="h-16 w-16 text-red-500 mb-4" /> */}
        <div className="text-5xl mb-4">üòî</div>
        <h2 className="text-2xl font-semibold text-red-400 mb-2">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–≥—Ä—ã</h2>
        <p className="text-slate-400 mb-6 max-w-md">{error}</p>
        <Button onClick={() => fetchGames()} variant="secondary">
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
        </Button>
      </div>
    );
  }

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="flex flex-col sm:flex-row justify-between items-center mb-8 sm:mb-12 gap-4">
        <h1 className="text-3xl sm:text-4xl font-bold text-indigo-400">–ö–∞—Ç–∞–ª–æ–≥ –ò–≥—Ä</h1>
        <Link href="/games/add">
          <Button variant="primary" className="flex items-center">
            {/* <PlusCircleIcon className="h-5 w-5 mr-2" /> */}
            <span className="text-lg mr-1">Ôºã</span> –î–æ–±–∞–≤–∏—Ç—å –ò–≥—Ä—É
          </Button>
        </Link>
      </div>

      {games.length === 0 && !isLoading ? (
        <div className="text-center py-16">
          <svg className="mx-auto h-24 w-24 text-slate-600" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">

          </svg>
          <h2 className="mt-2 text-2xl font-semibold text-slate-300">–ö–∞—Ç–∞–ª–æ–≥ –ø–æ–∫–∞ –ø—É—Å—Ç</h2>
          <p className="mt-1 text-slate-500">–ù–∞—á–Ω–∏—Ç–µ —Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤–∞—à–µ–π –ø–µ—Ä–≤–æ–π –∏–≥—Ä—ã!</p>
          <div className="mt-6">
            <Link href="/games/add">
              <Button variant="primary" size="lg"> {/* –£–≤–µ–ª–∏—á–∏–ª –∫–Ω–æ–ø–∫—É */}
                –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–≤—É—é –∏–≥—Ä—É
              </Button>
            </Link>
          </div>
        </div>
      ) : (
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6 lg:gap-8"> {/* –£–≤–µ–ª–∏—á–∏–ª gap –Ω–∞ –±–æ–ª—å—à–∏—Ö —ç–∫—Ä–∞–Ω–∞—Ö */}
          {games.map((game) => (
            <GameCard key={game.id} game={game} />
          ))}
        </div>
      )}
      
      {/* –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–∞–≥–∏–Ω–∞—Ü–∏—é –∑–¥–µ—Å—å, –µ—Å–ª–∏ –∏–≥—Ä –º–Ω–æ–≥–æ */}
    </div>
  );
}